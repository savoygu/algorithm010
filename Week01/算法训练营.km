{"root":{"data":{"id":"95631f0a905c","created":1591530347,"text":"算法训练营","expandState":"expand"},"children":[{"data":{"id":"c3auqutcfds0","created":1591531258837,"text":"如何高效学习","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3bcomgl3uo0","created":1591581863901,"text":"三分看视频理解、七分练习","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bcpp9scfc0","created":1591581948385,"text":"视频：","layout":null},"children":[{"data":{"id":"c3bcprl67ds0","created":1591581953427,"text":"最佳办法：","layout":null},"children":[{"data":{"id":"c3bcqd7qc1c0","created":1591582000503,"text":"1.5~2.0倍速播放、难点（暂停+反复）","layout":null},"children":[]}]},{"data":{"id":"c3bcq0j91uo0","created":1591581972901,"text":"最差办法：","layout":null},"children":[{"data":{"id":"c3bcqmd5gq80","created":1591582020422,"text":"类似看美剧一样，原速看完，仅一遍","layout":null},"children":[]}]}]}]},{"data":{"id":"c3ausxmihn40","created":1591531421683,"text":" 摒弃“旧”习惯 - 最重要","expandState":"expand","layout":null},"children":[{"data":{"id":"c3autygkf8w0","created":1591531501864,"text":"学习方式","layout":null},"children":[{"data":{"id":"c3auuh21duo0","created":1591531542344,"text":"不要死磕（传统方式）","layout":null},"children":[]},{"data":{"id":"c3av5xi42go0","created":1591532440151,"text":"五毒神掌（敢于放手、敢于死记硬背代码）","layout":null},"children":[]},{"data":{"id":"c3av683ufo00","created":1591532463232,"text":"不懒于看高手代码（国际版的高票回答）","layout":null},"children":[]}]},{"data":{"id":"c3auttas4y00","created":1591531490630,"text":"解题方式","layout":null},"children":[{"data":{"id":"c3auu5fb8e80","created":1591531517025,"text":"最佳方式","layout":null},"children":[{"data":{"id":"c3bcsjkmxz40","created":1591582171072,"text":"5分钟想不出来，直接看题解或高票代码，用五毒神掌变成自己的东西。\n这个过程：觉得自己很菜甚至有点自卑，但是有借势而起的感觉","layout":null},"children":[]}]},{"data":{"id":"c3auu7b81yg0","created":1591531521132,"text":"最差方式","layout":null},"children":[{"data":{"id":"c3bctosvt6o0","created":1591582260819,"text":"看到题目想自己单挑一下，不借助外部帮助自己解决；以为15-30分钟可以搞定，谁知道死磕了2-3小时或一晚上，终于“通过”。\n精疲力尽，没精力学习高票程序答案，就开始做下一题（或放弃）。","layout":null},"children":[]}]}]}]},{"data":{"id":"c3bcvrju9e00","created":1591582423531,"text":"学习方法上","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bcvu2gf740","created":1591582429010,"text":"改变自己的学习习惯（不要死磕）","layout":null},"children":[]},{"data":{"id":"c3bcw07k2a00","created":1591582442379,"text":"五毒神掌（重要的是 五！过遍数，而不是每次花很长时间）","layout":null},"children":[]},{"data":{"id":"c3bcwkoo1940","created":1591582486950,"text":"不要死磕AC了事，要看高票代码和高质量题解！","layout":null},"children":[]},{"data":{"id":"c3bcx2xfky80","created":1591582526662,"text":"最大误区：LeetCode 题目只做一遍！（90%素人、30%学员）","layout":null},"children":[]},{"data":{"id":"c3bd2musqvs0","created":1591582961859,"text":"应该如何？做 5 遍 ！做 5 遍！做 5 遍！","layout":null},"children":[]}]}]},{"data":{"id":"c3fu83g1ibs0","created":1592037588488,"text":"解题思路","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3fuaor6viw0","created":1592037791603,"text":"没有思路的时候\n\n看能不能暴力解\n想最简单的情况下应该怎么做，\n想出来之后，就要看怎么泛化，泛化的思路就是找重复性，\n这里是最近重复子问题，\n为什么要找重复性呢？因为我们的计算机它只能做这种 if  else for loop 和 recursion ，\n正是这样一个原因，层层嵌套在一起，最后发现你的思路，最后是把所有题目都只能\n往这个方向去做和思考，这么一想，你就会发现万事万物它的规律就这么一点，很简单的。\n所有解决问题，它的思路就是变成一个找重复性，因为我们的程序只能做重复的事情。","expandState":"expand","layout":null},"children":[{"data":{"id":"c3funoabgnc0","created":1592038809317,"text":"暴力","layout":null},"children":[]},{"data":{"id":"c3funvkr1d40","created":1592038825185,"text":"基本情况","layout":null},"children":[{"data":{"id":"c3fv5zzaow00","created":1592040245327,"text":"以爬楼梯为例","layout":null},"children":[{"data":{"id":"c3fv642whrc0","created":1592040254252,"text":"想：第一阶 怎么办，第二阶 怎么办","layout":null},"children":[]}]}]},{"data":{"id":"c3furmec8a00","created":1592039118663,"text":"找 最近 重复子问题（泛化）\n\n为什么找重复子问题呢？因为我们写程序只能写 if else 、for while 这样的 loop 、recursion\n然后是程序不断调自己和递归。除了 if else 这种简单的问题之外，\n其他的情况下 for while 和 recursion 的话都是不断的重复，究其原因，计算机是人类发明的，\n人类发明出来的工具，肯定没有人脑强啊，它其实就是一个简单的重复式的机器，\n就是再加上我们现在用的这些程序和这些算法，都是最简单的算法，所以不涉及任何人工智能的东西，\n你就把它想成一个不断重复在那里干事情的东西就好了，你要让它用重复的东西来解决你这种问题的话说明什么，\n说明这个问题本身就是可重复的，把这个想完之后，后面讲什么回溯、分治、动态规划、递归，全部都是找重复性","expandState":"expand","layout":null},"children":[{"data":{"id":"c3gdtx459o00","created":1592092899808,"text":"如何找重复性？\n\n以爬楼梯为例：你要上到第三级台阶，你要怎么上？\n因为每次只能走一步和每次只能走两步，\n所以你只能从第二级台阶跨一步到第三级台阶来，\n第二种走法是从第一级台阶一下跨两步到第三级台阶，\n没有其他的走法了，所以你只能从 n - 1级台阶走过来 或者 n - 2 级台阶走过来，\n那么从爬楼梯可以看出，\n第三级台阶就等于第一级台阶的走法加上第二级台阶的走法即可\n\n递推公式：\n\nf(3) = f(1) + f(2)\nf(4) = f(2) + f(3)\nf(n) = f(n - 1) + f(n - 2)","layout":null},"children":[]}]},{"data":{"id":"c3fv7jw3py00","created":1592040367033,"text":"所有的问题， 到最后， 都是找重复性","layout":null},"children":[]}]}]},{"data":{"id":"c3auma3eox40","created":1591530900276,"text":"预习","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aumlwpr480","created":1591530925993,"text":"数据结构与算法总览","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3bd40ow5u00","created":1591583070341,"text":"如何系统学习数据结构与算法","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bd93ksb880","created":1591583468444,"text":"线上课程","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bd9932c5k0","created":1591583480433,"text":"预习 — 基础知识自己预习和查看","layout":null},"children":[]},{"data":{"id":"c3bd9itjaj40","created":1591583501625,"text":"课堂互动 — 跟着老师一起思考、回答问题","layout":null},"children":[]},{"data":{"id":"c3bda24dta00","created":1591583543639,"text":"课后作业 — 按照切题办法","layout":null},"children":[]}]},{"data":{"id":"c3bdam9xk1c0","created":1591583587510,"text":"期待效果","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bdap4x0aw0","created":1591583593738,"text":"职业顶尖级别 — 对于算法数据结构的理解","layout":null},"children":[]},{"data":{"id":"c3bdb5ipc080","created":1591583629400,"text":"一线互联网面试","layout":null},"children":[]},{"data":{"id":"c3bdbafu3480","created":1591583640110,"text":"LeetCode 300+ 的积累","layout":null},"children":[]}]},{"data":{"id":"c3bdc0hdgqo0","created":1591583696800,"text":"精通一个领域","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bdc42x5hk0","created":1591583704633,"text":"Chunk it up 切碎知识点","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3bdcd2d5200","created":1591583724190,"text":"把要学习的知识点切碎变成一个有机的整体","layout":null},"children":[]},{"data":{"id":"c3be87jzosg0","created":1591586219849,"text":"关键点","expandState":"expand","layout":null},"children":[{"data":{"id":"c3be89583gw0","created":1591586223309,"text":"庖丁解牛","layout":null},"children":[]},{"data":{"id":"c3bdkbhix280","created":1591584347667,"text":"脉络相连","layout":null},"children":[{"data":{"id":"c3bdoqbhveo0","created":1591584693411,"text":"任何知识体系都是一棵树，所谓他叫做语法树，\n那你关键要掌握这个领域的知识的话，就是要把知识变成树状结构，\n有最基本的根，分出主干，再分出枝叶，每个知识点的话，\n要最后和你熟悉的知识挂靠在一起，成为一个树形结构。\n就是人脑不适合记忆和理解孤立的知识，所以一定要把它弄成一个脑图","layout":null},"children":[]}]}]}]},{"data":{"id":"c3bdclsuv0w0","created":1591583743206,"text":"Deliberate Practicing 刻意练习","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3bfxa3ha4o0","created":1591591005595,"text":"职业化运动","layout":null},"children":[{"data":{"id":"c3bfxcgmfl40","created":1591591010743,"text":"基本功是区别业余和职业选手的根本","layout":null},"children":[]},{"data":{"id":"c3bfxk5l9uo0","created":1591591027490,"text":"基础动作的分解训练和反复练习","layout":null},"children":[]}]},{"data":{"id":"c3bfz9aqs9s0","created":1591591160585,"text":"刻意练习","layout":null},"children":[{"data":{"id":"c3bfzezs7kw0","created":1591591172983,"text":"刻意练习 — 过遍数 （五毒神掌）","layout":null},"children":[]},{"data":{"id":"c3bfzrp4zfc0","created":1591591200638,"text":"练习缺陷、弱点地方","layout":null},"children":[]},{"data":{"id":"c3bg05abo9k0","created":1591591230217,"text":"可能会有这样的感觉：不舒服、不爽、枯燥","layout":null},"children":[]}]}]},{"data":{"id":"c3bdja2ro9k0","created":1591584266233,"text":"Feedback 反馈","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3bdjn9sae80","created":1591584294956,"text":"主动式反馈（自己去找）","layout":null},"children":[{"data":{"id":"c3bg86kpzf40","created":1591591859936,"text":"高手代码","layout":null},"children":[{"data":{"id":"c3bg8ckzrhs0","created":1591591873013,"text":"Github、LeetCode","layout":null},"children":[]}]}]},{"data":{"id":"c3bdjqr94xk0","created":1591584302542,"text":"被动式反馈（高手给你指点）","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bg8wnw2lk0","created":1591591916724,"text":"Code Review","layout":null},"children":[]}]}]}]},{"data":{"id":"c3be8ft3jts0","created":1591586237813,"text":"数据结构和算法知识脉络","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bfq3hcsag0","created":1591590442647,"text":"数据结构","expandState":"expand","layout":null},"children":[{"data":{"id":"c3be9ecptcg0","created":1591586313010,"text":"一维数据结构","expandState":"expand","layout":null},"children":[{"data":{"id":"c3be9s4s4yw0","created":1591586343005,"text":"基础","layout":null},"children":[{"data":{"id":"c3be9w7zl1s0","created":1591586351906,"text":"数组 array","layout":null},"children":[]},{"data":{"id":"c3be9y1w21k0","created":1591586355891,"text":"链表 linked list","layout":null},"children":[]}]},{"data":{"id":"c3be9syb8rc0","created":1591586344791,"text":"高级","layout":null},"children":[{"data":{"id":"c3bea9pj5080","created":1591586381265,"text":"栈 stack","layout":null},"children":[{"data":{"id":"c3beb3wtrr40","created":1591586447010,"text":"特点","layout":null},"children":[{"data":{"id":"c3beb5gjudc0","created":1591586450379,"text":"后进先出","layout":null},"children":[]}]}]},{"data":{"id":"c3beaczocnk0","created":1591586388409,"text":"队列 queue","layout":null},"children":[{"data":{"id":"c3bebawomx40","created":1591586462239,"text":"特点","layout":null},"children":[{"data":{"id":"c3bebbrarwg0","created":1591586464090,"text":"先进先出","layout":null},"children":[]}]}]},{"data":{"id":"c3beaigyzz40","created":1591586400339,"text":"双端队列 deque","layout":null},"children":[]},{"data":{"id":"c3beam3wrzk0","created":1591586408256,"text":"集合 set","layout":null},"children":[]},{"data":{"id":"c3beancyt140","created":1591586410981,"text":"映射 map (hash or map )","layout":null},"children":[]}]}]},{"data":{"id":"c3be9ipw0p40","created":1591586322514,"text":"二维数据结构","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bebqfrpbs0","created":1591586496045,"text":"基础","layout":null},"children":[{"data":{"id":"c3bebrcyqgg0","created":1591586498053,"text":"树 tree","layout":null},"children":[]},{"data":{"id":"c3bebsaoblc0","created":1591586500090,"text":"图 graph","layout":null},"children":[]}]},{"data":{"id":"c3bec139rq00","created":1591586519234,"text":"高级","layout":null},"children":[{"data":{"id":"c3bec1ztotc0","created":1591586521202,"text":"二叉搜索树 binary search tree","layout":null},"children":[{"data":{"id":"c3becojgxv40","created":1591586570279,"text":"特点","layout":null},"children":[{"data":{"id":"c3becqr4ae00","created":1591586575095,"text":"它的根节点的话大于它的左子树且小于它的右子树的全部节点，\n同时以此类推下去，也就是相对有序的一颗二叉树，就叫做儿叉搜索树","layout":null},"children":[]}]},{"data":{"id":"c3befvr7kb40","created":1591586821077,"text":"特殊结构","layout":null},"children":[{"data":{"id":"c3befxznje00","created":1591586825941,"text":"红黑树 red-black tree","layout":null},"children":[]},{"data":{"id":"c3befz8ffmg0","created":1591586828648,"text":"AVL","layout":null},"children":[]}]}]},{"data":{"id":"c3beglyrcr40","created":1591586878130,"text":"堆 heap","layout":null},"children":[]},{"data":{"id":"c3begtv4yfk0","created":1591586895325,"text":"并查集 disjoint set ","layout":null},"children":[]},{"data":{"id":"c3beh8ffghs0","created":1591586927027,"text":"字典树 Trie","layout":null},"children":[]}]}]},{"data":{"id":"c3be9l01l280","created":1591586327482,"text":"特殊数据结构","expandState":"expand","layout":null},"children":[{"data":{"id":"c3be9pd7ax40","created":1591586336984,"text":"位运算 Bitwise","layout":null},"children":[]},{"data":{"id":"c3beibmskzc0","created":1591587012367,"text":"布隆过滤器 BloomFilter","layout":null},"children":[]},{"data":{"id":"c3beioarz5c0","created":1591587039938,"text":"LRU Cache（高频）","layout":null},"children":[]}]}]},{"data":{"id":"c3bfq24ti2o0","created":1591590439712,"text":"算法","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bfqgbd2qg0","created":1591590470583,"text":"if-else, switch ——> branch","layout":null},"children":[]},{"data":{"id":"c3bfqpl6t600","created":1591590490768,"text":"for, while loop ——> Iteration","layout":null},"children":[]},{"data":{"id":"c3bfqwfswwo0","created":1591590505680,"text":"递归 Recursion (Divide & Conquer, BackTrace)","layout":null},"children":[]},{"data":{"id":"c3bft2iem2w0","created":1591590675626,"text":"搜索 Search","layout":null},"children":[{"data":{"id":"c3bft833n8w0","created":1591590687761,"text":"深度优先搜索 Depth first Search ( DFS )","layout":null},"children":[]},{"data":{"id":"c3bfthsslgg0","created":1591590708906,"text":"广度优先搜索 Breadth first Search ( BFS )","layout":null},"children":[]},{"data":{"id":"c3bftu6wj9c0","created":1591590735881,"text":"启发式搜索 A*","layout":null},"children":[]}]},{"data":{"id":"c3bfu2o2vmo0","created":1591590754333,"text":"动态规划 Dynamic Programming","layout":null},"children":[]},{"data":{"id":"c3bfuedlf340","created":1591590779821,"text":"二分查找 Binary Search","layout":null},"children":[]},{"data":{"id":"c3bfumr279c0","created":1591590798049,"text":"贪心 Greedy","layout":null},"children":[]},{"data":{"id":"c3bfuqnz62g0","created":1591590806570,"text":"数学 Math，几何 Geometry","layout":null},"children":[]}]}]},{"data":{"id":"c3bg9jyqkeo0","created":1591591967446,"text":"刷题技巧","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bg9o8xdm80","created":1591591976769,"text":"切题四件套：\n刷单个题目之前，养成四步系统化的思考方式","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3bgak55ip40","created":1591592046198,"text":"Clarification","layout":null},"children":[{"data":{"id":"c3bsolavd9k0","created":1591626999137,"text":"和面试官及自己多看几次题目，\n和面试官反复沟通一下题目，确保自己对\n这个题目的理解是正确的","layout":null},"children":[]}]},{"data":{"id":"c3bgax2gce00","created":1591592074333,"text":"Possible solutions：\n想可能的解法来解这个题目，\n关键是把所有可能的解法，先过一遍，\n同时比较不同解法它们的时间和空间复杂度，\n从中找出最优的一种解法","layout":null},"children":[{"data":{"id":"c3bgbeabb8o0","created":1591592111813,"text":"compare (time/space)","layout":null},"children":[]},{"data":{"id":"c3bgbm6x3400","created":1591592129022,"text":"optimal (加强)","layout":null},"children":[]}]},{"data":{"id":"c3bgbpzvs140","created":1591592137304,"text":"Coding （多写）","layout":null},"children":[]},{"data":{"id":"c3bgbudfeio0","created":1591592146830,"text":"Test cases","layout":null},"children":[{"data":{"id":"c3bss39mtts0","created":1591627273337,"text":"多列举几个测试样例","layout":null},"children":[]}]}]},{"data":{"id":"c3bg9mm2n3s0","created":1591591973210,"text":"五遍刷题法（五毒神掌）","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3bgcd7aago0","created":1591592187817,"text":"刷题第一遍","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bgch7g8bk0","created":1591592196535,"text":"5-15分钟：读题+思考","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bsslgcqlc0","created":1591627312926,"text":"把题目理解了，然后思考可能的解法","layout":null},"children":[]}]},{"data":{"id":"c3bgd0hnyj40","created":1591592238511,"text":"没思路的话，直接看解法：注意！多解法，比较不同解法优劣","layout":null},"children":[]},{"data":{"id":"c3bgec5wvgo0","created":1591592342286,"text":"背诵、默写好的解法（同时理解）","layout":null},"children":[]}]},{"data":{"id":"c3bgfq9lh3c0","created":1591592451348,"text":"刷题第二遍","layout":null},"children":[{"data":{"id":"c3bgfvcpj4w0","created":1591592462420,"text":"马上自己写 —> LeetCode 提交","layout":null},"children":[{"data":{"id":"c3bsunc6k880","created":1591627473755,"text":"有 bug 也没关系，不断 debug、修改，直到提交通过","layout":null},"children":[]}]},{"data":{"id":"c3bgg6512bk0","created":1591592485900,"text":"多种解法比较、体会 —> 优化！","layout":null},"children":[{"data":{"id":"c3bswttqjiw0","created":1591627644606,"text":"每种解法都写一遍","layout":null},"children":[]},{"data":{"id":"c3bsxe32qew0","created":1591627688706,"text":"每一种解法的话在 leetcode 上面的它还会有不同的执行时间和内存消耗，\n最重要的是执行时间，不同解法比较执行时间，同时对于同一解法的话，执行时间要是偏长的话，\n想一下优化的办法。直到这些不同的解法通过，而且的话执行时间相对是较优的。","layout":null},"children":[]}]}]},{"data":{"id":"c3bggmlbwww0","created":1591592521714,"text":"刷题第三遍","layout":null},"children":[{"data":{"id":"c3bggx2w6lc0","created":1591592544544,"text":"过了24小时后，再重复做一遍之前做过的题目","layout":null},"children":[]},{"data":{"id":"c3bgh4zeusw0","created":1591592561748,"text":"不同解法的熟练程度 —> 专项练习","layout":null},"children":[{"data":{"id":"c3bt3h3nzb40","created":1591628165457,"text":"不同解法的熟练程度要是不一样的话，\n对自己不是特别熟练的题目做专项练习","layout":null},"children":[]}]}]},{"data":{"id":"c3bgi8nieko0","created":1591592648100,"text":"刷题第四遍","layout":null},"children":[{"data":{"id":"c3bgig3wurk0","created":1591592664329,"text":"过了一周：反复回来练习相同题目","layout":null},"children":[]},{"data":{"id":"c3bgisq37ew0","created":1591592691791,"text":"对于不熟练的题目 —> 专项练习 ","layout":null},"children":[]}]},{"data":{"id":"c3bgjier6w00","created":1591592747702,"text":"刷题第五遍","expandState":"expand","layout":null},"children":[{"data":{"id":"c3bgjcdwtc00","created":1591592734590,"text":"面试前一周恢复性训练","layout":null},"children":[]}]}]}]}]}]},{"data":{"id":"c3aumpr9ips0","created":1591530934371,"text":"训练准备和复杂度分析","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3bhldp8zao0","created":1591595715291,"text":"训练准备","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3bt724alo00","created":1591628446300,"text":"电脑设置","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3bt73jttl40","created":1591628449416,"text":"搜索引擎设置为 Google","layout":null},"children":[]},{"data":{"id":"c3bt7ficp3s0","created":1591628475448,"text":"Mac： iTerm2 + zsh ","layout":null},"children":[]}]},{"data":{"id":"c3bts20xn3k0","created":1591630091744,"text":"指法和小操作","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3bts7e0t5s0","created":1591630103420,"text":"home，end","layout":null},"children":[]},{"data":{"id":"c3btsa9pmkg0","created":1591630109689,"text":"Word 单词、选单词、选整行","layout":null},"children":[]},{"data":{"id":"c3btsgwqeww0","created":1591630124142,"text":"IDE的自动补全","layout":null},"children":[]},{"data":{"id":"c3btsk3cr480","created":1591630131073,"text":"Top tips for <IDE-name>","layout":null},"children":[]}]},{"data":{"id":"c3bttiyy4ug0","created":1591630206994,"text":"自顶向下的编程方式","layout":null},"children":[]}]},{"data":{"id":"c3bhldzobqo0","created":1591595715921,"text":"时间和空间复杂度","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3bu3i1a6600","created":1591630988600,"text":"时间复杂度：","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3c8tncmlao0","created":1591672533176,"text":"Big O notation\n注意：只看最高复杂度的运算","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3bu5x158ig0","created":1591631177971,"text":"O(1):   Constant Complexity 常数复杂度","layout":null},"children":[]},{"data":{"id":"c3bu71fe2bc0","created":1591631265904,"text":"O(log n) Logarithmic Complexity 对数复杂度","layout":null},"children":[]},{"data":{"id":"c3bu7iuxnxk0","created":1591631303849,"text":"O(n): Linear Complexity 线性时间复杂度","layout":null},"children":[]},{"data":{"id":"c3c8km40fzc0","created":1591671825201,"text":"O(n^2): N square Complexity 平方","layout":null},"children":[]},{"data":{"id":"c3c8kzjpx680","created":1591671854449,"text":"O(n^3): N cubic Complexity 立方","layout":null},"children":[]},{"data":{"id":"c3c8l8o5q800","created":1591671874309,"text":"O(2^n): Exponential Growth 指数","layout":null},"children":[]},{"data":{"id":"c3c8lh4ck4o0","created":1591671892702,"text":"O(n!): Factorial 阶乘","layout":null,"expandState":"expand"},"children":[]}]},{"data":{"id":"c3cbfibbwk00","created":1591679888446,"text":"时间复杂度曲线","expandState":"expand","layout":null},"children":[{"data":{"id":"c3cbhv8exjs0","created":1591680073296,"text":" ","image":"https://kityminder-img.gz.bcebos.com/2cc956ebe15fc9ecd6c7fe82c7a78a7ccb67cbce","imageTitle":"","imageSize":{"width":200,"height":131},"layout":null},"children":[]}]},{"data":{"id":"c3ceojlngbk0","created":1591689059854,"text":"更复杂的情况：递归","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3ceu5c1b3c0","created":1591689498982,"text":"主定理","expandState":"collapse","layout":null},"children":[{"data":{"id":"c3cewkw32g80","created":1591689689575,"text":"常用算法复杂度计算","layout":null},"children":[{"data":{"id":"c3cewt7d0s00","created":1591689707671,"text":"二分查找 Binary Search","layout":null},"children":[{"data":{"id":"c3cewz2dls80","created":1591689720430,"text":"Recurrence relationship","layout":null},"children":[{"data":{"id":"c3cexhk98bk0","created":1591689760693,"text":"T(n) = T(n/2) + O(1)","layout":null},"children":[]}]},{"data":{"id":"c3cexabyndk0","created":1591689744954,"text":"Run time","layout":null},"children":[{"data":{"id":"c3cexcyiixk0","created":1591689750671,"text":"O(log n)","layout":null},"children":[]}]}]},{"data":{"id":"c3cewt7d0s00","created":1591689707671,"text":"二叉树遍历 Binary tree traversal","layout":null},"children":[{"data":{"id":"c3cewz2dls80","created":1591689720430,"text":"Recurrence relationship","layout":null},"children":[{"data":{"id":"c3cexhk98bk0","created":1591689760693,"text":"T(n) = 2T(n/2) + O(1)","layout":null},"children":[]}]},{"data":{"id":"c3cexabyndk0","created":1591689744954,"text":"Run time","layout":null},"children":[{"data":{"id":"c3cexcyiixk0","created":1591689750671,"text":"O(n)","layout":null},"children":[]}]}]},{"data":{"id":"c3cewt7d0s00","created":1591689707671,"text":"排好序的二维矩阵 Optimal sorted matrix search","layout":null},"children":[{"data":{"id":"c3cewz2dls80","created":1591689720430,"text":"Recurrence relationship","layout":null},"children":[{"data":{"id":"c3cexhk98bk0","created":1591689760693,"text":"T(n) =2 T(n/2) + O(log n)","layout":null},"children":[]}]},{"data":{"id":"c3cexabyndk0","created":1591689744954,"text":"Run time","layout":null},"children":[{"data":{"id":"c3cexcyiixk0","created":1591689750671,"text":"O(n)","layout":null},"children":[]}]}]},{"data":{"id":"c3cewt7d0s00","created":1591689707671,"text":"归并排序 Merge sort","layout":null},"children":[{"data":{"id":"c3cewz2dls80","created":1591689720430,"text":"Recurrence relationship","layout":null},"children":[{"data":{"id":"c3cexhk98bk0","created":1591689760693,"text":"T(n) =2 T(n/2) + O(log n)","layout":null},"children":[]}]},{"data":{"id":"c3cexabyndk0","created":1591689744954,"text":"Run time","layout":null},"children":[{"data":{"id":"c3cexcyiixk0","created":1591689750671,"text":"O(n log n)","layout":null},"children":[]}]}]}]}]}]},{"data":{"id":"c3cf0rs3cjs0","created":1591690018027,"text":"思考题","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3cf0tfr7ns0","created":1591690021635,"text":"二叉树遍历 - 前序、中序、后续：时间复杂度是多少？","layout":null},"children":[{"data":{"id":"c3cf2pp729c0","created":1591690170227,"text":"分析","layout":null},"children":[{"data":{"id":"c3cfg247fog0","created":1591691215990,"text":"不管是前序中序后序它遍历二叉树的时候，\n每个节点会访问一次且仅访问一次，\n所以它的时间复杂度就是线性于二叉树的节点总数，\n也就是 O(n) 的时间复杂度","layout":null},"children":[]}]},{"data":{"id":"c3cf31h6h6g0","created":1591690195864,"text":"答案","layout":null},"children":[{"data":{"id":"c3cf32h96ns0","created":1591690198045,"text":"O(n)","layout":null},"children":[]}]}]},{"data":{"id":"c3cf28fw33s0","created":1591690132659,"text":"图的遍历：时间复杂度是多少？","layout":null},"children":[{"data":{"id":"c3cf2pp729c0","created":1591690170227,"text":"分析","layout":null},"children":[{"data":{"id":"c3cfi2sbizc0","created":1591691374176,"text":"图里面的每个节点访问一次且仅访问一次，所以它的时间复杂度为 O(n)，\n这里的 n 的话是图的里面的节点总数","layout":null},"children":[]}]},{"data":{"id":"c3cf31h6h6g0","created":1591690195864,"text":"答案","layout":null},"children":[{"data":{"id":"c3cf32h96ns0","created":1591690198045,"text":"O(n)","layout":null},"children":[]}]}]},{"data":{"id":"c3cf2cpqy3c0","created":1591690141962,"text":"搜索算法：DFS、BFS 时间复杂度是多少？","layout":null},"children":[{"data":{"id":"c3cf2pp729c0","created":1591690170227,"text":"分析","layout":null},"children":[{"data":{"id":"c3cfj5i1k000","created":1591691458450,"text":"因为访问的节点只访问一次，\n所以它的时间复杂度都是 O(n) 的，\n这里的 n 指的是搜索空间里的节点总数","layout":null},"children":[]}]},{"data":{"id":"c3cf31h6h6g0","created":1591690195864,"text":"答案","layout":null},"children":[{"data":{"id":"c3cf32h96ns0","created":1591690198045,"text":"O(n)","layout":null},"children":[]}]}]},{"data":{"id":"c3cf2kj06yg0","created":1591690158969,"text":"二分查找：时间复杂度是多少？","layout":null},"children":[{"data":{"id":"c3cf2pp729c0","created":1591690170227,"text":"分析","layout":null},"children":[]},{"data":{"id":"c3cf2rr2rc00","created":1591690174694,"text":"答案","layout":null},"children":[{"data":{"id":"c3cf2u5sfk80","created":1591690179937,"text":"O(log n)","layout":null},"children":[]}]}]}]}]},{"data":{"id":"c3bu3lblmsg0","created":1591630995754,"text":"空间复杂度","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3cfkldqtk00","created":1591691571382,"text":"实战情况","expandState":"expand","layout":null},"children":[{"data":{"id":"c3cfkn6n0000","created":1591691575306,"text":"数组的长度","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dbbil7eqo0","created":1591781135544,"text":"如果你的代码中开辟了数组，那么数组的长度，基本上就是你的空间复杂度。\n比如说：你开了一个一维的数组，它的长度为传入的数组的个数，那么一般来说你的空间复杂度就是 O(n)\n如果你开的是两维数组，数组的长度是 n 平方，那么你的空间复杂度基本上就是 n 平方的；","layout":null},"children":[]}]},{"data":{"id":"c3cfkoyi2co0","created":1591691579168,"text":"递归的深度（特殊说明）","layout":null},"children":[{"data":{"id":"c3dcl1fz0gw0","created":1591784702973,"text":"如果有递归的话，那么递归最深的深度，就是你的空间复杂度的最大值；\n当然了，如果又是递归里面又开了数组，那就是两者之间的最大值就是你的时间复杂度","layout":null},"children":[]}]}]}]}]}]}]},{"data":{"id":"c3aufff7aiw0","created":1591530363324,"text":"第一周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aufgh5t000","created":1591530365619,"text":"数组、链表、跳表","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3dcmsuhuuo0","created":1591784840988,"text":"数组 Array","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e3yiw7qm80","created":1591861929662,"text":"复杂度分析","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e2x8nu9fs0","created":1591859007913,"text":"时间复杂度","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e3niontr40","created":1591861067199,"text":"首位添加 (prepend)：O(1)","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e3oypouqg0","created":1591861180454,"text":"注意：正常情况下数组的 prepend 操作的事件复杂度是 O(n)，\n但是可以进行特殊优化到 O(1)。采用的方式是申请稍大一些的内存空间，\n然后在数组最开始预留一部分空间，然后prepend 的操作就是把头下标前移一个位置即可。","layout":null},"children":[]}]},{"data":{"id":"c3e3nlmebps0","created":1591861073592,"text":"末位追加 (append)：O(1)","layout":null},"children":[]},{"data":{"id":"c3e2xiz63r40","created":1591859030366,"text":"查找 (lookup)：O(1)","layout":null},"children":[]},{"data":{"id":"c3e2z5ucuj40","created":1591859158505,"text":"插入 (insert)：O(n)","layout":null},"children":[]},{"data":{"id":"c3e2zlgp3hc0","created":1591859192508,"text":"删除 (delete): O(n)","layout":null},"children":[]}]}]}]},{"data":{"id":"c3dcmuqkn3s0","created":1591784845104,"text":"链表 Linked List","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dcv14yk0w0","created":1591785485948,"text":"分类","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dcv5qbbzk0","created":1591785495947,"text":"单链表 Single Linked List","layout":null},"children":[]},{"data":{"id":"c3dcv1uk1go0","created":1591785487496,"text":"双链表 Double Linked List","layout":null},"children":[]}]},{"data":{"id":"c3e3ww29qw80","created":1591861801598,"text":"复杂度分析","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dcywsrqsw0","created":1591785789961,"text":"时间复杂度","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dcz06eeag0","created":1591785797315,"text":"首位添加 (prepend)：O(1)","layout":null},"children":[]},{"data":{"id":"c3dcz5gx2ao0","created":1591785808835,"text":"末位追加 (append)：O(1)","layout":null},"children":[]},{"data":{"id":"c3dczb5227k0","created":1591785821179,"text":"查找 (lookup)：O(n)","layout":null},"children":[]},{"data":{"id":"c3dczcc0zog0","created":1591785823777,"text":"插入 (insert)：O(1)","layout":null},"children":[]},{"data":{"id":"c3dczd1340o0","created":1591785825292,"text":"删除 (delete)：O(1)","layout":null},"children":[]}]},{"data":{"id":"c3e2fkjf6z40","created":1591857623213,"text":"空间复杂度","layout":null},"children":[]}]},{"data":{"id":"c3e2jin9b8w0","created":1591857932548,"text":"工程应用","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e2jlmrswo0","created":1591857939049,"text":"最少最近使用算法 LRU ( Least Recently Use ) ","layout":null},"children":[]}]},{"data":{"id":"c3gif52e2f40","created":1592105847203,"text":"练习建议"},"children":[{"data":{"id":"c3gif6sqe6o0","created":1592105850972,"text":"解法非常的固定，主要就是熟能生巧，没有很多算法的东西，\n关键就是要熟悉怎么把 next 指针、prev 指针 换过来换过去，\n要熟悉的办法就是多做，同时还是五遍刷题法一定要做，\n同时所有 Linked List 这题目的话，大家在写以前的话一定要再都写一遍这些高频的 LInked List"},"children":[]}]}]},{"data":{"id":"c3dcmw0pobs0","created":1591784847894,"text":"跳表 Skip List","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dd2sm8ilk0","created":1591786094315,"text":"特点","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dd2uv7peo0","created":1591786099212,"text":"注意：只能用于元素有序的情况。","layout":null},"children":[]},{"data":{"id":"c3dd389h4i80","created":1591786128372,"text":"所以，跳表（skip list）对标的是平衡树（AVL Tree）和二分查找，\n是一种 插入/删除/搜索 都是 O(log n) 的数据结构。1989 年出现。","layout":null},"children":[]},{"data":{"id":"c3dd3tngw1s0","created":1591786174931,"text":"它最大的优势是原理简单、容易实现、方便扩展、效率更高。因此\n在一些热门的项目里用来替代平衡树，如 Redis、LevelDB 等。","layout":null},"children":[]}]},{"data":{"id":"c3e3zhffyps0","created":1591862004835,"text":"复杂度分析","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e2fb8ne4o0","created":1591857602970,"text":"时间复杂度","layout":null},"children":[{"data":{"id":"c3e451rut400","created":1591862440942,"text":"查找 loopup：O(logn)","layout":null},"children":[]}]},{"data":{"id":"c3e2fef34ko0","created":1591857609890,"text":"空间复杂度","layout":null},"children":[{"data":{"id":"c3e4il9k2vs0","created":1591863502105,"text":"O(n)","note":"原始链表大小为 n，每 2 个结点抽 1 个，每层索引的结点数：\nn/2 , n/4 , n/8 , ⋯ , 8,4,2\n原始链表大小为 n，每 3 个结点抽 1 个，每层索引的结点数：\nn/3 , n/9 , n/27 , ⋯ , 9,3,1\n\n空间复杂度是 O(n)","layout":null},"children":[]}]}]},{"data":{"id":"c3e2k48vd0g0","created":1591857979567,"text":"工程运用","expandState":"expand","layout":null},"children":[{"data":{"id":"c3e2k691dsg0","created":1591857983931,"text":"数据库 Redis","layout":null},"children":[]}]}]},{"data":{"id":"c3dcnqtivcg0","created":1591784914940,"text":"题目分析","expandState":"expand","layout":null},"children":[{"data":{"id":"c3dcnx9v0yo0","created":1591784928988,"text":"移动零","layout":null},"children":[]},{"data":{"id":"c3dco00ydk00","created":1591784934980,"text":"盛水最多的容器、爬楼梯","layout":null},"children":[]},{"data":{"id":"c3dco6nobhk0","created":1591784949415,"text":"3数之和、环形链表","layout":null},"children":[]}]}]},{"data":{"id":"c3aufxbsw3c0","created":1591530402301,"text":"栈、队列、优先队列、双端队列","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3dcn1fgi4g0","created":1591784859670,"text":"栈 Stack","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3gmeqfydm00","created":1592117099811,"text":"特点","expandState":"expand"},"children":[{"data":{"id":"c3gmg8re3hs0","created":1592117218049,"text":"先入后出 FILO（ First in Last out ）"},"children":[]}]},{"data":{"id":"c3gmgygsthc0","created":1592117274005,"text":"复杂度","expandState":"expand"},"children":[{"data":{"id":"c3gmh1d38gw0","created":1592117280311,"text":"时间复杂度","expandState":"expand"},"children":[{"data":{"id":"c3gmh3yc36o0","created":1592117285949,"text":"添加 O(1)"},"children":[]},{"data":{"id":"c3gmh8cr75c0","created":1592117295528,"text":"删除 O(1)"},"children":[]},{"data":{"id":"c3gmhdphvm00","created":1592117307182,"text":"查询 O(n)"},"children":[]}]},{"data":{"id":"c3gmh3amy200","created":1592117284516,"text":"空间复杂度"},"children":[]}]},{"data":{"id":"c3gnbczwmg80","created":1592119656560,"text":"题目解析"},"children":[{"data":{"id":"c3gnbec5wfk0","created":1592119659478,"text":"Leetcode 20 题 有效括号"},"children":[]}]},{"data":{"id":"c3gnbtjc7ko0","created":1592119692563,"text":"应用场景"},"children":[{"data":{"id":"c3gnctzzcb40","created":1592119771934,"text":"最近相关性"},"children":[]}]}]},{"data":{"id":"c3dcn34llig0","created":1591784863367,"text":"队列 Queue","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3gmeu3ffq80","created":1592117107761,"text":"特点"},"children":[{"data":{"id":"c3gmeutwdjc0","created":1592117109361,"text":"先入先出 FIFO（ First in - First out ）"},"children":[]}]},{"data":{"id":"c3gmhvosmbs0","created":1592117346322,"text":"复杂度"},"children":[{"data":{"id":"c3gmh1d38gw0","created":1592117280311,"text":"时间复杂度"},"children":[{"data":{"id":"c3gmh3yc36o0","created":1592117285949,"text":"添加 O(1)"},"children":[]},{"data":{"id":"c3gmh8cr75c0","created":1592117295528,"text":"删除 O(1)"},"children":[]},{"data":{"id":"c3gmhdphvm00","created":1592117307182,"text":"查询 O(n)"},"children":[]}]}]},{"data":{"id":"c3gncwurru80","created":1592119778149,"text":"应用场景"},"children":[{"data":{"id":"c3gnd47jo8o0","created":1592119794159,"text":"先来后到"},"children":[]}]}]},{"data":{"id":"c3dcn3wpdlk0","created":1591784865066,"text":"优先队列 （Priority Queue）","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3gmhvosmbs0","created":1592117346322,"text":"复杂度"},"children":[{"data":{"id":"c3gmh1d38gw0","created":1592117280311,"text":"时间复杂度"},"children":[{"data":{"id":"c3gmh3yc36o0","created":1592117285949,"text":"添加 O(1)"},"children":[]},{"data":{"id":"c3gmh8cr75c0","created":1592117295528,"text":"删除 O(1)"},"children":[]},{"data":{"id":"c3gmhdphvm00","created":1592117307182,"text":"查询 O(log n)"},"children":[{"data":{"id":"c3gmuyo8uts0","created":1592118371553,"text":"为什么是 O(log n) 呢？\n里面的数据结构保持了一定的有序性，是一些高级的数据结构。\n具体里面用了什么数据结构呢？\n底层具体实现的数据结构较为多样和复杂：可以是 heap （也是多种实现的）、bst、treap"},"children":[]}]}]}]}]},{"data":{"id":"c3dcn5ix9q80","created":1591784868586,"text":"双端队列 Deque （Double-End Queue）","layout":null,"expandState":"expand"},"children":[{"data":{"id":"c3gmjlg8ujc0","created":1592117480765,"text":"特点","expandState":"expand"},"children":[{"data":{"id":"c3gmjtjsh400","created":1592117498394,"text":"两端可以进出的"},"children":[]}]},{"data":{"id":"c3gmhvosmbs0","created":1592117346322,"text":"复杂度","expandState":"expand"},"children":[{"data":{"id":"c3gmh1d38gw0","created":1592117280311,"text":"时间复杂度","expandState":"expand"},"children":[{"data":{"id":"c3gmh3yc36o0","created":1592117285949,"text":"添加 O(1)"},"children":[]},{"data":{"id":"c3gmh8cr75c0","created":1592117295528,"text":"删除 O(1)"},"children":[]},{"data":{"id":"c3gmhdphvm00","created":1592117307182,"text":"查询 O(n)"},"children":[]}]}]}]}]},{"data":{"id":"c3e59q59g2o0","created":1591865628562,"text":"核心思想","expandState":"expand","layout":null},"children":[{"data":{"id":"c3f29s1cvnk0","created":1591958729306,"text":"升维","layout":null},"children":[]},{"data":{"id":"c3f29vobfhs0","created":1591958737225,"text":"空间换时间","layout":null},"children":[]}]}]},{"data":{"id":"c3auh3j0h4o0","created":1591530494162,"text":"第二周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3auha8wwgg0","created":1591530508788,"text":"哈希表、映射、集合","layout":null},"children":[]},{"data":{"id":"c3auhmt8fkw0","created":1591530536138,"text":"树、二叉树、二叉搜索树","layout":null},"children":[]},{"data":{"id":"c3auhzmkwdk0","created":1591530564034,"text":"堆和二叉堆、图","layout":null},"children":[]}]},{"data":{"id":"c3auhszw17s0","created":1591530549603,"text":"第三周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3auia3b6mo0","created":1591530586814,"text":"泛型递归、树的递归","layout":null},"children":[]},{"data":{"id":"c3auj2006dk0","created":1591530647564,"text":"分治、回溯","layout":null},"children":[]}]},{"data":{"id":"c3auj9vf5gw0","created":1591530664701,"text":"第四周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aujczvpk00","created":1591530671501,"text":"深度优先搜索（DFS）和广度优先搜索（BFS）","layout":null},"children":[]},{"data":{"id":"c3aujppmfag0","created":1591530699179,"text":"贪心算法","layout":null},"children":[]},{"data":{"id":"c3aujt546rk0","created":1591530706646,"text":"二分查找","layout":null},"children":[]}]},{"data":{"id":"c3aujzhiuxs0","created":1591530720457,"text":"第五周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3auk0xizbs0","created":1591530723601,"text":"期中考试","layout":null},"children":[]}]},{"data":{"id":"c3auk4fnxpc0","created":1591530731228,"text":"第六周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3auk8d9hg00","created":1591530739790,"text":"动态规划","layout":null},"children":[]}]},{"data":{"id":"c3aukbdg2hk0","created":1591530746332,"text":"第七周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aukd7a7gw0","created":1591530750313,"text":"字典树和并查集","layout":null},"children":[]},{"data":{"id":"c3aukhm2ens0","created":1591530759914,"text":"高级搜索","layout":null},"children":[]},{"data":{"id":"c3aukkfbno80","created":1591530766036,"text":"红黑树和 AVL 树","layout":null},"children":[]}]},{"data":{"id":"c3aukpzvjps0","created":1591530778163,"text":"第八周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aukrr0tio0","created":1591530781981,"text":"位运算","layout":null},"children":[]},{"data":{"id":"c3auktdv1tc0","created":1591530785539,"text":"布隆过滤器和LRU缓存","layout":null},"children":[]},{"data":{"id":"c3aul1ctib40","created":1591530802890,"text":"排序算法","layout":null},"children":[]}]},{"data":{"id":"c3aukxwiy2o0","created":1591530795375,"text":"第九周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aulkir4xc0","created":1591530844608,"text":"高级动态规划","layout":null},"children":[]},{"data":{"id":"c3aulpxwsgw0","created":1591530856408,"text":"字符串算法","layout":null},"children":[]}]},{"data":{"id":"c3auldsxei00","created":1591530829986,"text":"第十周","layout":null,"expandState":"collapse"},"children":[{"data":{"id":"c3aulft9oi80","created":1591530834360,"text":"毕业考试","layout":null},"children":[]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}